# change prefix to Ctrl-a (like in gnu-screen)
unbind C-b
set-option -g prefix C-a
set-option -g status-keys vi # Use vi-style key bindings in the status line

# vertical splits with |
unbind %
unbind -
bind \ split-window -h
bind - split-window -v
bind-key x kill-pane

# Give us a slightly higher repeat delay for repeatable keystrokes
set repeat-time 750

# Allows us to use C-a a <command> to send commands to a TMUX session inside
# another TMUX session
bind-key s send-prefix

# I'm a Vim user, this makes navigation easier
setw -g mode-keys vi # I especially like being able to search with /,? when in copy-mode
unbind [
bind Escape copy-mode
unbind p
bind p paste-buffer
bind -t vi-copy 'v' begin-selection
bind -t vi-copy 'y' copy-selection

# Vimish nav
unbind-key h
bind-key h select-pane -L
unbind-key j
bind-key j select-pane -D # Similar to 'C-w j' to navigate windows in Vim
unbind-key k
bind-key k select-pane -U
unbind-key l
bind-key l select-pane -R

# smart pane switching with awareness of vim splits
# bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
# bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
# bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
# bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
# bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

# Pane breaking
unbind Up
bind Up new-window -d -n tmp \; swap-pane -s tmp.1 \; select-window -t tmp
unbind Down
bind Down last-window \; swap-pane -s tmp.1 \; kill-window -t tmp

# shell
set -g default-command /bin/zsh
set -g default-shell /bin/zsh

# start with window 1 (instead of 0)
set -g base-index 1

# start with pane 1
set -g pane-base-index 1

# screen mode
set -g default-terminal "screen-256color"
set -g terminal-overrides 'xterm:colors=256'

# source config file
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# turn off automatic window renaming
set-window-option -g automatic-rename off

# Window cycling
# bind -r C-h select-window -t:-
# bind -r C-l select-window -t:+

# history
set -g history-limit 8096

# allow terminal scrolling
set-option -g terminal-overrides 'xterm*:smcup@:rmcup@'

# C-a C-a for last active window
bind-key C-a last-window

# set escape delay time to zero
set -s escape-time 0

# allows windows not constrained to the size of the smallest window
setw -g aggressive-resize on

# window title string (uses statusbar variables)
set -g set-titles on
set -g set-titles-string '#T'

# status bar with load and time
set -g status-left-length 30
set -g status-right-length 60
set -g status-left '#[bg=#B294BB]#[fg=#1D1F21]#{session_name}#[bg=black]'
set -g status-right '#[bg=#282A2E]#[fg=#C5C8C6]#{pane_current_command}#[fg=#707880] @ #{pane_pid} #[bg=#1D1F21]#[fg=#C5C8C6]#(date +" %H:%M ")'
set -g window-status-format '[#[fg=#707880]#I #[fg=#C5C8C6]#W #[fg=#707880]#F]'
set -g window-status-current-format '#[fg=#81A2BE]#[bg=#282A2E]<#[fg=#707880]#I #[fg=#C5C8C6]#W #[fg=#707880]#F#[fg=#81A2BE]>'

# By default, all windows in a session are constrained to the size of the
# smallest client connected to that session, even if both clients are
# looking at different windows.
setw -g aggressive-resize on

# Activity monitoring
setw -g monitor-activity on
set -g visual-activity on

# Example of using a shell command in the status line
#set -g status-right "#[fg=yellow]#(uptime | cut -d ',' -f 2-)"

# mouse mode
#set -g mode-mouse on
#set -g mouse-resize-pane on
#set -g mouse-select-pane on
#set -g mouse-select-window on

# General status stuff
set -g status-position bottom
set -g status on
set -g status-utf8 on

# how often to update the status bar
set -g status-interval 2

# default statusbar colors
set -g status-fg white
set -g status-bg default
set -g status-attr bright

# default window title colors
set-window-option -g window-status-fg white
set-window-option -g window-status-bg default
set-window-option -g window-status-attr dim

# active window title colors
set-window-option -g window-status-current-fg blue
set-window-option -g window-status-current-bg default
set-window-option -g window-status-current-attr bright

# command/message line colors
set -g message-fg white
set -g message-bg black
set -g message-attr bright

# pane-swapping shortcuts
# pane movement
bind-key J command-prompt -p "join pane from:"  "join-pane -s '%%'"
bind-key S command-prompt -p "send pane to:"  "join-pane -t '%%'"
