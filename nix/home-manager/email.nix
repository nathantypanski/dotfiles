{ config, userEmail, username, pkgs, lib, homeDirectory, ... }:

let
  # ── customize just this ───────────────────────────────────────────────────────
  name        = "ndt";                 # localpart only
  fastDomain  = "fastmail.com";
  fast        = "${name}@${fastDomain}";
  # gmailDomain = "gmail.com";
  # gmail       = "${name}@${gmailDomain}";

  mailSecret = pkgs.writeShellScriptBin "mail-secret" ''
    set -euo pipefail
    entry="''${1:?usage: mail-secret path/in/store}"
    ${lib.getExe pkgs.passage} show "$entry" | head -n1
  '';
in
{
  home.packages = [ pkgs.passage mailSecret pkgs.w3m pkgs.urlscan pkgs.ripmime pkgs.wl-clipboard pkgs.jq pkgs.glow ];

  programs.aerc = {
    enable = true;

    # REQUIRED with HM: accounts.conf will live in nix-store (0444)
    extraConfig = {
      general = {
        # REQUIRED when aerc accounts.conf is generated by HM (0444 in nix store)
        "unsafe-accounts-conf" = true;
        # optional but recommended:
        "unsafe-commands" = false;
      };

      ui = {
        "mouse-enabled" = true;
        "timestamp-format" = "2006-01-02 15:04";
        opening = "external";
      };

      viewer = {
        alternatives = "text/plain,text/html";
        pipethrough  = "text/html|w3m -dump -T text/html";
        "save-unsafe" = false;
        # Inline filters by MIME (stdin -> stdout)
        # TODO: Fix aerc filters configuration format
        # filters = {
        #   # text
        #   "text/plain"     = "cat";
        #   "text/markdown"  = "glow -s auto -";
        #   "text/html"      = "w3m -dump -T text/html";
        #
        #   # structured text
        #   "application/json" = "jq -C .";
        #   "text/json"        = "jq -C .";
        #   "application/xml"  = "xmllint --format -";
        #   "text/xml"         = "xmllint --format -";
        #
        #   # documents
        #   "application/pdf" = "pdftotext -layout -q - -";  # stdin -> stdout
        #
        #   # images (render ANSI preview in terminal)
        #   "image/*" = "chafa -s 0x0 -f symbols -";
        # };
      };

      compose = {
        editor = "$EDITOR";
      };
    };

    extraBinds = ''
      # Author: Rafo
      # Description: Keybindings for aerc
      # License: MIT
      # Source: https://github.com/rafo/aerc-vim
      # Binds are of the form <key sequence> = <command to run>
      # To use '=' in a key sequence, substitute it with "Eq": "<Ctrl+Eq>"
      # If you wish to bind #, you can wrap the key sequence in quotes: "#" = quit

      <C-t> = :term<Enter> # open terminal
      ? = :help keys<Enter> # show help
      gt = :next-tab<Enter> # select next tab
      gT = :prev-tab<Enter> # select previous tab
      H = :prev-tab<Enter> # select previous tab
      L = :next-tab<Enter> # select next tab
      ZZ = :prompt 'Quit? ' quit<Enter> # quit

      [messages]
      dd = :delete<Enter> # delete mail under cursor. Use if its not google mail.
      ! = :term<space> # open terminal
      $ = :term<space> # open terminal
      / = :search<space> # search mails. Next character filters mails.
      <C-b> = :prev 100%<Enter> # move one screen back
      <C-d> = :next 50%<Enter> # move half a screen down
      <C-f> = :next 100%<Enter> # move one screen forward
      <C-i> = :vsplit - <Enter> # Shrink the vertical split of the message list.
      <C-l> = :clear<Enter> # clear the terminal
      <C-o> = :vsplit + <Enter> # Grow the vertical split of the message list.
      <C-r> = :check-mail<Enter> # Check for new mail
      <C-u> = :prev 50%<Enter> # move half a screen up
      <C-w> = :vsplit<Enter> # Creates a vertical split of the message list.
      <Down> = :next<Enter> # select next mail
      <Enter> = :view<Enter> # open mail
      <Esc> = :clear<Enter> # clear
      <PgDn> = :next 100%<Enter> # move one screen forward
      <PgUp> = :prev 100%<Enter> # move one screen back
      <Up> = :prev<Enter> # select previous mail
      c = :cf<space> # change mail folder. Next character filters folders.
      dd = :move<space>"[Google Mail]/Trash"<Enter> # For Google accounts: delete mail under cursor by moving it to the trash folder
      tu = :unsubscribe<Enter> # unsubscribe from mailing list
      E = :compose<Enter> # edit new mail
      ea = :reply -a<Enter> # edit a reply to all senders
      ee = :compose<Enter> # edit a new mail like E
      eF = :forward -a<Enter> # edit a forward mail to all recipients
      ef = :forward<Enter> # edit a forward mail
      eR = :reply -aq<Enter> # edit a reply to sender and all CC with quoted original mail
      er = :reply -q<Enter> # edit a reply with quoted original mail
      F = :filter<space> # filter mails. Next character filters mails.
      fa = :filter -a<space> # filter entire text of mails. e.g. "fa foo" filters mails containing "foo" in the entire mail.
      fb = :filter -b<space> # filter text in the body of mails
      fc = :filter -c<space> # filter mails cc'd to recipient
      fd = :filter -d<space> # filter mails with date range (e.g. 2019-01-01..2019-12-31)
      ff = :filter -f<space> "{{index (.From | emails) 0}}" <Enter> # filter all mails from current sender
      fF = :filter -f<space> # filter mails from sender
      fr = :filter -r<space> # filter read mails (old mails)
      fs = :filter -H<space> subject:"{{.SubjectBase}}" <Enter> #
      fS = :filter -H<space> subject:<Space> # filter mails with subject e.g. "fs foo" filters mails with subject containing "foo"
      ft = :filter -t<space> # filter mails to recipient
      fu = :filter -u<space> # filter unread mails (new mails)
      G = :select -1<Enter> # select last mail
      gg = :select 0<Enter> # select first mail
      i = :compose<Enter> # edit new mail. Like "E" or "O" but with a different key.
      J = :next-folder<Enter> # select next mail folder
      j = :next<Enter> # select next mail
      K = :prev-folder<Enter> # select previous mail folder
      k = :prev<Enter> # select previous mail
      l = :view<Enter> # open mail
      mm = :mark -v<Enter> # mark mails like v
      mt = :mark -t<Enter> # mark mail as todo
      md = :mark -d<Enter> # mark mail as done
      mu = :unread<Enter> # mark mail as unread. Like "tr"
      n = :next-result<Enter> # jump to next search result
      N = :prev-result<Enter>
      O = :compose<Enter> # edit new mail like in vim to insert a new line above the current line.
      o = :reply -q<Enter> # edit a reply with original mail like in vim to insert a new line below the current line.
      pa = :archive flat<Enter> # move (think put or paste) mail in the archive folder
      pb = :move<space> Brain<Enter> # move mail in my Brain.
      pf = :move<space> # move (think put or paste) mail in folder. Next character filters folders.
      sA = :sort -r arrival<Enter> # sort mails by arrival (reversed)
      sa = :sort arrival<Enter> # sort mails by arrival
      sC = :sort -r cc<Enter> # sort mails by cc (reversed)
      sc = :sort cc<Enter> # sort mails by cc
      sD = :sort -r date<Enter> # sort mails by time & date
      sd = :sort date<Enter> # sort mails by time & date
      sF = :sort -r from<Enter> # sort mails by sender (reversed)
      sf = :sort from<Enter> # sort mails by sender
      sR = :sort -r read<Enter> # sort mails by read status (reversed)
      sr = :sort read<Enter> # sort mails by read status
      sS = :sort -r subject<Enter> # sort mails by subject (reversed)
      ss = :sort subject<Enter> # sort mails by subject
      sT = :sort -r to<Enter> # sort mails by to (reversed)
      st = :sort to<Enter> # sort mails by to
      sZ = :sort -r size<Enter> # sort mails by size (reversed)
      sz = :sort size<Enter> # sort mails by size
      ta = :flag -ta<Enter> # toggle mail between answered and unanswered
      tr = :read -t<Enter> # toggle read status
      ts = :flag -tx Seen<Enter> # toggle seen status
      tt = :toggle-threads<Enter> # toggle threads
      V = :mark -V<Enter> # Same as -v but does not clear existing selection
      vv = :mark -v<Enter> # Enter / leave visual mark mode
      va = :mark -a<Enter> # mark all mails in the current view
      vt = :mark -t<Enter> # toggle the mark state instead of marking a message
      vT = :mark -T<Enter> # Marks the displayed message thread of the selected message
      yy = :copy<space> # copy mail to a folder. Next character filters folders.
      yf = :pipe -b echo "{{index (.From | emails) 0}}" | pbcopy # Copy the email-address of the sender (*f*rom) to the clipboard
      ys = :pipe -b echo "{{.Subject}}" | pbcopy # Copy the *s*ubject of the email to the clipboard
      yd = :pipe -b echo "{{.Date}}" | pbcopy # Copy the *d*ate and time of the email to the clipboard
      yf = :copy<space> # copy mail to a folder. Next character filters folders.
      zC = :collapse-folder<Enter> # collapse folder in the siedebar / directory tree
      zc = :collapse<Enter> # collapse thread
      zO = :expand-folder<Enter> # expand folder in the sidebar / directory tree
      zo = :open-thread<Enter> # open thread
      ZZ = :quit<Enter> # Quit aerc. Only "q" is to dangerous.
      | = :pipe<space> # pipe mail to command (e.g. |less)

      [messages:folder=Drafts]
      <Enter> = :recall<Enter> # recall mail from drafts folder

      [view]
      <C-i> = :toggle-key-passthrough<Enter> # toggle key passthrough
      <C-j> = :next<Enter> # open next mail
      <C-k> = :prev<Enter> # open previous mail
      dd = :delete<Enter> # delete selected mail
      ea = :reply -a<Enter> # edit a reply to all recipients
      ee = :reply <Enter> # edit a reply to the sender
      eF = :forward -a<Enter> # edit a forward mail to all recipients
      ef = :forward<Enter> # edit a forward mail like f
      eQ = :reply -a -q<Enter> # edit a reply to all senders with quoted mail
      eq = :reply -q<Enter> # edit a reply to all senders with quoted mail
      F = :forward -a<Enter> # edit a forward mail to all recipients like eF
      f = :forward<Enter> # forward mail like ef
      gl = :open-link <space> # open link under cursor
      h = :close<Enter> # close the current view and return to the message list
      i = :reply<Enter> # reply with original mail
      I = :toggle-key-passthrough<Enter> # toggle key passthrough
      j = :next-part<Enter> # Switch to next part of a multipart email.
      k = :prev-part<Enter> # Switch to previous part of a multipart email.
      l = :open<Enter> # open
      o = :reply -aq<Enter> # edit a reply to all with quoted mail
      O = :reply -q<Enter> # edit a reply with quoted mail
      pa = :archive flat<Enter> # Put mail in the archive folder
      pb = :move<space> Brain<Enter> # move mail in my Brain.
      pf = :move<space> # move (think put or paste) mail in folder. Next character filters folders.
      q = :close<Enter> # quit the current view
      ra = :reply -a<Enter> # edit a reply all without quoted mail
      rq = :reply -q<Enter> # edit a reply to new with quoted mail
      rr = :reply -aq<Enter> # edit a reply all with quoted mail
      th = :toggle-headers<Enter> # toggle headers
      w = :save<space> # write mail to file [name].
      x = :delete<Enter> # delete selected mail like dd
      | = :pipe<space>

      [view::passthrough]
      $noinherit = true
      $ex = <C-x>
      <Esc> = :toggle-key-passthrough<Enter>

      [compose] # Keybindings used when the embedded terminal is not selected in the compose view
      $ex = <C-x>
      $noinherit = true
      <A-h> = :switch-account -p<Enter>
      <A-l> = :switch-account -n<Enter>
      <backtab> = :prev-field<Enter>
      <C-h> = :prev-tab<Enter>
      <C-j> = :next-field<Enter>
      <C-k> = :prev-field<Enter>
      <C-l> = :next-tab<Enter>
      <tab> = :next-field<Enter>

      [compose::editor] # Keybindings used when the embedded terminal is selected in the compose view
      $noinherit = true
      $ex = <C-x>
      <C-k> = :prev-field<Enter>
      <C-j> = :next-field<Enter>
      <C-h> = :prev-tab<Enter>
      <C-l> = :next-tab<Enter>

      [compose::review] # Keybindings used when reviewing a mail to be sent
      w = :send<Enter> # send
      s = :send<Enter> # send
      ZZ = :abort<Enter> # abort
      q = :abort<Enter> # abort
      v = :preview<Enter>
      p = :postpone<Enter>
      d = :discard<Enter>
      D = :discard abort<Enter>
      e = :edit<Enter>
      aa = :attach<space> # attach attachment
      ad = :detach<space> # detach attachment

      [terminal]
      $noinherit = true
      $ex = <C-x>
      <C-h> = :prev-tab<Enter>
      <C-l> = :next-tab<Enter>
      [messages]
      j = :next<Enter>
      k = :prev<Enter>
      gg = :select 0<Enter>
      G  = :select last<Enter>
      dd = :delete<Enter>
      u  = :undelete<Enter>
      /  = :search<space>
      n  = :search-next<Enter>
      N  = :search-prev<Enter>
      v  = :mark -t<Enter>
      x  = :pipe ripmime -i - -d ~/Downloads<Enter>
      y  = :pipe wl-copy<Enter>
      U  = :pipe urlscan -dc -<Enter>

      [view]
      j  = :next<Enter>
      k  = :prev<Enter>
      gg = :open 0<Enter>
      G  = :open -1<Enter>
      V  = :view-source<Enter>
    '';
  };

  # IMPORTANT: delete any xdg.configFile/home.file that writes aerc/accounts.conf

  accounts.email = {
    accounts = {
      fastmail = {
        primary  = true;
        address  = fast;
        realName = name;
        userName = fast;
        imap = { host = "imap.fastmail.com"; port = 993; tls.enable = true; };
        smtp = { host = "smtp.fastmail.com"; port = 465; tls.enable = true; };
        aerc = {
          enable = true;
          # imapAuth = "plain";   # <- enum value, not "passwordcmd"
          # smtpAuth = "plain";   # <- enum value, not "passwordcmd"
          extraAccounts = {
            "source-cred-cmd"   = "mail-secret email/${username}@${fastDomain}/imap";
            "outgoing-cred-cmd" = "mail-secret email/${username}@${fastDomain}/smtp";
            "copy-to"           = "Sent";
            postpone            = "Drafts";
            "check-mail"        = "60s";
            "cache-headers"     = true;
            "cache-threads"     = true;
          };
        };
      };

      # gmail = {
      #   primary  = true;
      #   address  = gmail;
      #   realName = name;
      #   userName = gmail;
      #   imap = { host = "imap.gmail.com"; port = 993; tls.enable = true; };
      #   smtp = { host = "smtp.gmail.com"; port = 465; tls.enable = true; };
      #   aerc = {
      #     enable = true;
      #     imapAuth = "plain";   # or "login"; use "xoauth2"/"oauthbearer" if you do OAuth2 later
      #     smtpAuth = "plain";
      #     extraAccounts = {
      #       "source-cred-cmd"   = "mail-secret email/gmail/imap";
      #       "outgoing-cred-cmd" = "mail-secret email/gmail/smtp";
      #       "copy-to"           = "[Gmail]/Sent Mail";
      #       postpone            = "[Gmail]/Drafts";
      #       "check-mail"        = "60s";
      #       "cache-headers"     = true;
      #       "cache-threads"     = true;
      #     };
      #   };
      # };
    };
  };
}
